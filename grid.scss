@import "compass/css3";

@import url(http://fonts.googleapis.com/css?family=Oxygen:400,300,700);

$gutter: 2%;
$columns: 5 !default;
$total: 100%;


// Grid Container mixin
@mixin grid-container() {
  //clear: both;
  margin-bottom: $gutter;
  &:before,
  &:after {
    content: "";
    display: table;
  }
  &:after {
    clear: both;
  }
}

// Grid Item mixin
@mixin grid-item(
  $span: $columns,
  $margin-right: $gutter
) {
$columns: $columns;
// limit span to number of columns
@if ($span > $columns) {
    $span: $columns;
  }
  @include box-sizing(border-box);
  padding: 1em;
  float: left;
  width: ( ($total - ( ($columns - 1) * $gutter ) ) * ($span/$columns) ) + ( ($span - 1) * $gutter);
  @if ($span != $columns or $span > $columns) {
    margin-right: $margin-right;
  }
  margin-bottom: $gutter;
  background: #ededed; // testing
  &:last-of-type {
    margin-right: 0;
    margin-bottom: 0;
  }
}

// typical layout test

body {
  background: url(http://subtlepatterns.com/patterns/grey_wash_wall.png) 350px 259px #333;
  padding: 2em 5em;
  font-family: 'Oxygen', sans-serif;
  font-weight: 300;
}
h1 {
  color: #fff;
  font-size: 2em;
}
#container {
  //max-width: 1200px;
  margin: 0 auto;
  background: #fff;
  @include grid-container;
  padding: 1em;
}
.header, .footer {
  background: red;
  @include grid-container;
  @include grid-item(8);
}

.content {
  @include grid-container;
}

.main {
  @include grid-item(1);
}

.sidebar {
  @include grid-item(3);
}

.sidebar2 {
  @include grid-item(1);
}

// Lots of boxes test
.box1 {
  @include grid-item(5);
}
.box2 {
  @include grid-item(2.5);
}
.box3 {
  @include grid-item(2.5);
}
.box4 {
  @include grid-item(1);
}
.box5 {
  @include grid-item(1);
}
.box6 {
  @include grid-item(1);
}
.box7 {
  @include grid-item(1);
}
.box8 {
  @include grid-item(1);
}
.boxwrap {
  @include grid-container;
}

/* Nested Tests */
.nest1, .nest2 {
  @include grid-container;
}
.nest1 {
  $columns: 6;
  [class*='nestbox']  {
    @include grid-item(2);
    div {
      background: #ccc;
    }
  }
}
.nest2 {
  $columns: $columns;
  [class*='nestbox']  {
    @include grid-item(2);
  }
  .nestbox1 {
    $columns: 5;
    @include grid-container;
    [class*='subnestbox'] {
      @include grid-item(5);
    }
  }
  .nestbox2 {
    $columns: 3;
    div:nth-child(3n+1) {
      @include grid-item(2);
    }
    div:nth-child(3n+2) {
      @include grid-item(1,0);
    }
    div:nth-child(3n+3) {
      @include grid-item(3);
      @include grid-container;
      [class*='d-level'] {
        $columns: 4;
        @include grid-item(2);
        background: #aaa;
      }
    }
  }
  [class*='subnestbox'] {
    background: #ccc !important;
  }
}


@media all and (max-width: 768px) {
  $columns: 6;
  .main, .sidebar, .sidebar2 {
    @include grid-item(2);
  }
}